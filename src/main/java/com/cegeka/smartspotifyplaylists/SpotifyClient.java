package com.cegeka.smartspotifyplaylists;

import com.cegeka.smartspotifyplaylists.domain.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.reactive.function.client.WebClient;
import reactor.core.publisher.Mono;

import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

@Component
public class SpotifyClient {

    @Value("${client_id}")
    private String clientId;
    @Value("${client_secret}")
    private String clientSecret;

    @Autowired
    private UserState userState;

    private final WebClient webClient;

    public SpotifyClient() {
        webClient = WebClient.builder().build();
    }

    public Mono<AccessToken> getAccessTokenWithAuthorizationCode(String code) {
        System.out.println(clientId);
        System.out.println(clientSecret);


      return webClient.post()
                .uri("https://accounts.spotify.com/api/token")
                .contentType(MediaType.APPLICATION_FORM_URLENCODED)
                .headers(httpHeaders -> httpHeaders.setBasicAuth(clientId, clientSecret))
                .bodyValue(String.format("grant_type=authorization_code&code=%s&redirect_uri=http://localhost:8080/spotify-redirect", code))
                .retrieve()
                .bodyToMono(AccessToken.class);
    }

    public Mono<List<Playlist>> getPlaylists() {
        return webClient.get()
                .uri("https://api.spotify.com/v1/me/playlists")
                .headers(httpHeaders -> httpHeaders.setBearerAuth(userState.getAccessToken().accessToken()))
                .retrieve()
                .bodyToMono(new ParameterizedTypeReference<PlaylistResponse>() {}
                ).map(PlaylistResponse::items);
    }

    public Mono<List<String>> getTracks(String id) {
        return webClient.get()
                .uri(String.format("https://api.spotify.com/v1/playlists/%s/tracks",id ))
                .headers(httpHeaders -> httpHeaders.setBearerAuth(userState.getAccessToken().accessToken()))
                .retrieve()
                .bodyToMono(new ParameterizedTypeReference<PlaylistTracksResponse>() {}
                ).map(PlaylistTracksResponse::items)
                .map(trackItems -> trackItems.stream().map(trackItem -> trackItem.track().id()).toList());
    }

    public Mono<Playlist> createPlayList(String  newName) {
        Mono<Playlist> responseEntityMono = webClient.get()
                .uri("https://api.spotify.com/v1/me")
                .headers(httpHeaders -> httpHeaders.setBearerAuth(userState.getAccessToken().accessToken()))
                .retrieve()
                .bodyToMono(MeReponse.class)
                .flatMap(me ->
                        webClient.post()
                                .uri(String.format("https://api.spotify.com/v1/users/%s/playlists", me.id()))
                                .bodyValue(new NewPlaylist(newName, "Auto-generated by Smart Spotify Playlists"))
                                .headers(httpHeaders -> httpHeaders.setBearerAuth(userState.getAccessToken().accessToken()))
                                .retrieve()
                                .bodyToMono(Playlist.class));


        return responseEntityMono;
    }

    public Mono<ResponseEntity<Void>> addItemsToPlayList(String  id, List<String> trackIds) {
        List<String> uris = trackIds.stream().map(s -> "spotify:track:" + s)
                .collect(Collectors.toSet())
                .stream().toList();

        Mono<ResponseEntity<Void>> responseEntityMono = webClient.get()
                .uri("https://api.spotify.com/v1/me")
                .headers(httpHeaders -> httpHeaders.setBearerAuth(userState.getAccessToken().accessToken()))
                .retrieve()
                .bodyToMono(MeReponse.class)
                .flatMap(me ->
                        webClient.post()
                                .uri(String.format("https://api.spotify.com/v1/playlists/%s/tracks", id))
                                .bodyValue(new InsertTrackTP(uris, 0))
                                .headers(httpHeaders -> httpHeaders.setBearerAuth(userState.getAccessToken().accessToken()))
                                .retrieve()
                                .toBodilessEntity());


        return responseEntityMono;
    }
}

